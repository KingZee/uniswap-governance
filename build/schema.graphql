type Proposal @entity {
  id: ID!
  proposer: String!
  startBlock: BigInt!
  endBlock: BigInt!
  # status: ProposalStatus!  //Impossible to track
  canceled: Boolean!
  executed: Boolean!
  queued: Boolean!
  description: String
  voteFor: BigInt!
  voteAgainst: BigInt!
  votes: [Vote]! @derivedFrom(field: "proposal")
  executionETA: BigInt

  targets: [String!]
  values: [BigInt!]
  signatures: [String!]
  calldatas: [Bytes!]
}

enum ProposalStatus {
  Pending
  Passed
  Failed
  Canceled
  Queued
  Executed
}

type Vote @entity {
  id: ID!
  proposal: Proposal!
  support: Boolean!
  voter: Account!
  amount: BigInt!
}

type Account @entity {
  id: ID!
  votingPower: BigInt!
  delegatedTo: Account!
  delegates: [Account]! @derivedFrom(field: "delegatedTo")
  votes: [Vote]! @derivedFrom(field: "voter")
}
